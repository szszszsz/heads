version: 2
jobs:
  build:
    docker:
      - image: ubuntu:18.04
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update
            apt install -y build-essential zlib1g-dev uuid-dev libdigest-sha-perl libelf-dev bc bzip2 bison flex git gnupg iasl m4 nasm patch python wget gnat cpio ccache pkg-config cmake libusb-1.0-0-dev autoconf texinfo
      - checkout

      - restore_cache:
          key: heads-{{ .Branch }}

      - run:
          name: git reset
          command: |
            git reset --hard "$CIRCLE_SHA1" \

# linuxboot steps need something to pass in the kernel header path
# skipping for now
#      - run:
#          name: qemu-linuxboot-edk2
#          command: |
#            ./build/make-4.2.1/make \
#                CROSS=/cross/bin/x86_64-linux-musl- \
#                BOARD=qemu-linuxboot \
#                `/bin/pwd`/build/linuxboot-git/build/qemu/.configured \
#                # Run first to avoid too many processes
#
#      - run:
#          name: qemu-linuxboot
#          command: |
#            ./build/make-4.2.1/make \
#                CROSS=/cross/bin/x86_64-linux-musl- \
#                --load 2 \
#                V=1 \
#                BOARD=qemu-linuxboot \
#
#      - store-artifacts:
#          path: build/qemu-linuxboot/linuxboot.rom
#      - store-artifacts:
#          path: build/qemu-linuxboot/hashes.txt


      - run:
          name: qemu-coreboot
          command: |
            rm -rf build/make-4.2.1/ && make --load 2 \
                V=1 \
                BOARD=qemu-coreboot \
          no_output_timeout: 3h
      - run:
          name: Output qemu-coreboot hashes
          command: |
             cat build/qemu-coreboot/hashes.txt \

      - store-artifacts:
          path: build/qemu-coreboot/coreboot.rom
      - store-artifacts:
          path: build/qemu-coreboot/hashes.txt

      - run:
          name: clear old cache for libremkey-hotp-verification*
          command: |
            rm -rf build/libremkey-hotp-verification* -v

      - run:
          name: x230-hotp_verification
          command: |
            make --load 2 \
                V=1 \
                BOARD=x230-hotp_verification \
          no_output_timeout: 3h
      - run:
          name: Ouput x230-hotp_verification hashes
          command: |
            cat build/x230-hotp_verification/hashes.txt \
      - run:
          name: Archiving build logs to bundle in artifacts
          command: |
            tar zcvf logs.tar.gz ./build/log/*
      - run:
          name: Archiving hotp verification build files
          command: |
            tar zcvf libremkey-hotp.tar.gz ./build/libremkey-hotp-verification*


      - store-artifacts:
          path: build/x230-hotp_verification/coreboot.rom
      - store-artifacts:
          path: build/x230-hotp_verification/x230-hotp_verification-bottom.rom
      - store-artifacts:
          path: build/x230-hotp_verification/x230-hotp_verification-top.rom
      - store-artifacts:
          path: build/x230-hotp_verification/initrd.cpio.xz
      - store-artifacts:
          path: logs.tar.gz
      - store-artifacts:
          path: libremkey-hotp.tar.gz

      - save_cache:
          key: heads-{{ .Branch }}
          paths:
            - packages
            - crossgcc
            - build

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
